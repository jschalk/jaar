name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: pip install python-semantic-release

      - name: Set Git identity
        run: |
          git config user.name "Release Bot"
          git config user.email "bot@example.com"

      - name: Show current directory and files
        run: |
          pwd
          ls -la
          echo "complete Show current directory and files"

      - name: Create initial tag if missing
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.PAT_jaar }}
        run: |
          echo "Setting git remote to use PAT token"
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/jschalk/jaar.git
          git remote -v

          echo "Checking for existing tags..."
          if ! git describe --tags --abbrev=0 > /dev/null 2>&1; then
            echo "No tags found. Creating initial tag from __version__..."
            VERSION=$(python -c "
          import re
          with open('__init__.py') as f:
              content = f.read()
          match = re.search(r'__version__ *= *[\"\\']([^\"\\']+)', content)
          if match:
              print(match.group(1))
          else:
              raise ValueError('Version not found')
          ")
            echo "Tagging as v$VERSION"
            git tag "v$VERSION"
            git push origin "v$VERSION"
          else
            echo "Tag already exists, skipping."
          fi

      - name: Run python-semantic-release
        env:
          GH_TOKEN: ${{ secrets.PAT_jaar }}
        run: semantic-release publish
