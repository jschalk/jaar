from src.ch22_belief_viewer.belief_viewer_app import get_belief_viewer_template
from src.ref.ch22_keywords import Ch22Keywords as wx


def test_get_belief_viewer_template_ReturnsObj():
    # ESTABLISH / WHEN
    template_str = get_belief_viewer_template()

    # THEN
    assert template_str
    expected_strs_in_template = {
        wx.active_hx,
        wx.active,
        wx.all_voice_cred,
        wx.all_voice_debt,
        wx.awardheirs,
        wx.awardlines,
        wx.task,
        wx.descendant_pledge_count,
        wx.factheirs,
        wx.fund_cease,
        wx.fund_onset,
        wx.fund_ratio,
        wx.gogo_calc,
        # wx.healerunit_ratio,
        # wx.is_expanded,
        wx.laborheir,
        # wx.tree_level,
        # wx.range_evaluated,
        wx.reasonheirs,
        wx.stop_calc,
        wx.uid,
        wx.addin,
        wx.awardunits,
        wx.begin,
        wx.moment_label,
        wx.close,
        wx.denom,
        wx.factunits,
        wx.fund_grain,
        wx.plan_fund_total,
        wx.gogo_want,
        # wx.healerunit,
        # wx.knot,
        wx.laborunit,
        wx.morph,
        wx.numor,
        wx.parent_rope,
        wx.voices,
        wx.plan_label,
        wx.planroot,
        # wx.problem_bool,
        wx.reasonunits,
        wx.star,
        wx.stop_want,
        wx.pledge,
        wx.voice_cred_points,
        wx.voice_debt_points,
        # f"voice{wx.memberships}",
        f"voice_{wx.credor_pool}",
        f"voice_{wx.debtor_pool}",
        f"voice_{wx.irrational_voice_debt_points}",
        f"voice_{wx.inallocable_voice_debt_points}",
        f"voice_{wx.fund_give}",
        f"voice_{wx.fund_take}",
        f"voice_{wx.fund_agenda_give}",
        f"voice_{wx.fund_agenda_take}",
        f"voice_{wx.fund_agenda_ratio_give}",
        f"voice_{wx.fund_agenda_ratio_take}",
        f"voice_membership_{wx.group_title}",
        f"voice_membership_{wx.group_cred_points}",
        f"voice_membership_{wx.group_debt_points}",
        f"voice_membership_{wx.credor_pool}",
        f"voice_membership_{wx.debtor_pool}",
        f"voice_membership_{wx.fund_agenda_give}",
        f"voice_membership_{wx.fund_agenda_ratio_give}",
        f"voice_membership_{wx.fund_agenda_ratio_take}",
        f"voice_membership_{wx.fund_agenda_take}",
        f"voice_membership_{wx.fund_give}",
        f"voice_membership_{wx.fund_take}",
    }

    for expected_str in sorted(list(expected_strs_in_template)):
        print(f"{expected_str=}")
        assert template_str.find(expected_str) > 0
