from src.ch22_belief_viewer._ref.ch22_keywords import (
    Ch02Keywords as wx,
    Ch03Keywords as wx,
    Ch06Keywords as wx,
    active_hx_str,
    active_str,
    all_voice_cred_str,
    all_voice_debt_str,
    awardheirs_str,
    awardlines_str,
    awardunits_str,
    credor_pool_str,
    debtor_pool_str,
    denom_str,
    descendant_pledge_count_str,
    factheirs_str,
    factunits_str,
    fund_agenda_give_str,
    fund_agenda_ratio_give_str,
    fund_agenda_ratio_take_str,
    fund_agenda_take_str,
    fund_cease_str,
    fund_give_str,
    fund_onset_str,
    fund_ratio_str,
    fund_share_str,
    fund_take_str,
    gogo_calc_str,
    gogo_want_str,
    group_cred_points_str,
    group_debt_points_str,
    group_title_str,
    inallocable_voice_debt_points_str,
    irrational_voice_debt_points_str,
    laborheir_str,
    laborunit_str,
    moment_label_str,
    morph_str,
    numor_str,
    plan_label_str,
    planroot_str,
    pledge_str,
    reasonheirs_str,
    reasonunits_str,
    star_str,
    stop_calc_str,
    stop_want_str,
    task_str,
    uid_str,
    voice_cred_points_str,
    voice_debt_points_str,
    voices_str,
)
from src.ch22_belief_viewer.belief_viewer_app import get_belief_viewer_template


def test_get_belief_viewer_template_ReturnsObj():
    # ESTABLISH / WHEN
    template_str = get_belief_viewer_template()

    # THEN
    assert template_str
    expected_strs_in_template = {
        active_hx_str(),
        active_str(),
        all_voice_cred_str(),
        all_voice_debt_str(),
        awardheirs_str(),
        awardlines_str(),
        task_str(),
        descendant_pledge_count_str(),
        factheirs_str(),
        fund_cease_str(),
        fund_onset_str(),
        fund_ratio_str(),
        gogo_calc_str(),
        # healerunit_ratio_str(),
        # is_expanded_str(),
        laborheir_str(),
        # tree_level_str(),
        # range_evaluated_str(),
        reasonheirs_str(),
        stop_calc_str(),
        uid_str(),
        wx.addin,
        awardunits_str(),
        wx.begin,
        moment_label_str(),
        wx.close,
        denom_str(),
        factunits_str(),
        wx.fund_iota,
        fund_share_str(),
        gogo_want_str(),
        # healerunit_str(),
        # wx.knot,
        laborunit_str(),
        morph_str(),
        numor_str(),
        wx.parent_rope,
        voices_str(),
        plan_label_str(),
        planroot_str(),
        # problem_bool_str(),
        reasonunits_str(),
        "root",
        star_str(),
        stop_want_str(),
        pledge_str(),
        voice_cred_points_str(),
        voice_debt_points_str(),
        # f"voice{memberships_str()}",
        f"voice_{credor_pool_str()}",
        f"voice_{debtor_pool_str()}",
        f"voice_{irrational_voice_debt_points_str()}",
        f"voice_{inallocable_voice_debt_points_str()}",
        f"voice_{fund_give_str()}",
        f"voice_{fund_take_str()}",
        f"voice_{fund_agenda_give_str()}",
        f"voice_{fund_agenda_take_str()}",
        f"voice_{fund_agenda_ratio_give_str()}",
        f"voice_{fund_agenda_ratio_take_str()}",
        f"voice_membership_{group_title_str()}",
        f"voice_membership_{group_cred_points_str()}",
        f"voice_membership_{group_debt_points_str()}",
        f"voice_membership_{credor_pool_str()}",
        f"voice_membership_{debtor_pool_str()}",
        f"voice_membership_{fund_agenda_give_str()}",
        f"voice_membership_{fund_agenda_ratio_give_str()}",
        f"voice_membership_{fund_agenda_ratio_take_str()}",
        f"voice_membership_{fund_agenda_take_str()}",
        f"voice_membership_{fund_give_str()}",
        f"voice_membership_{fund_take_str()}",
    }

    for expected_str in sorted(list(expected_strs_in_template)):
        print(f"{expected_str=}")
        assert template_str.find(expected_str) > 0
